// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.4
// source: nitric/proto/resources/v1/resources.proto

package resourcespb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ResourceType int32

const (
	ResourceType_Api                   ResourceType = 0
	ResourceType_Service               ResourceType = 1
	ResourceType_Bucket                ResourceType = 2
	ResourceType_Topic                 ResourceType = 3
	ResourceType_Schedule              ResourceType = 4
	ResourceType_Subscription          ResourceType = 5
	ResourceType_Collection            ResourceType = 6
	ResourceType_Policy                ResourceType = 7
	ResourceType_Secret                ResourceType = 8
	ResourceType_BucketListener        ResourceType = 9
	ResourceType_Websocket             ResourceType = 10
	ResourceType_Http                  ResourceType = 11
	ResourceType_ApiSecurityDefinition ResourceType = 12
)

// Enum value maps for ResourceType.
var (
	ResourceType_name = map[int32]string{
		0:  "Api",
		1:  "Service",
		2:  "Bucket",
		3:  "Topic",
		4:  "Schedule",
		5:  "Subscription",
		6:  "Collection",
		7:  "Policy",
		8:  "Secret",
		9:  "BucketListener",
		10: "Websocket",
		11: "Http",
		12: "ApiSecurityDefinition",
	}
	ResourceType_value = map[string]int32{
		"Api":                   0,
		"Service":               1,
		"Bucket":                2,
		"Topic":                 3,
		"Schedule":              4,
		"Subscription":          5,
		"Collection":            6,
		"Policy":                7,
		"Secret":                8,
		"BucketListener":        9,
		"Websocket":             10,
		"Http":                  11,
		"ApiSecurityDefinition": 12,
	}
)

func (x ResourceType) Enum() *ResourceType {
	p := new(ResourceType)
	*p = x
	return p
}

func (x ResourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_nitric_proto_resources_v1_resources_proto_enumTypes[0].Descriptor()
}

func (ResourceType) Type() protoreflect.EnumType {
	return &file_nitric_proto_resources_v1_resources_proto_enumTypes[0]
}

func (x ResourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceType.Descriptor instead.
func (ResourceType) EnumDescriptor() ([]byte, []int) {
	return file_nitric_proto_resources_v1_resources_proto_rawDescGZIP(), []int{0}
}

type Action int32

const (
	// Bucket Permissions: 0XX
	Action_BucketFileList   Action = 0
	Action_BucketFileGet    Action = 1
	Action_BucketFilePut    Action = 2
	Action_BucketFileDelete Action = 3
	// Topic Permissions: 2XX
	Action_TopicList         Action = 200
	Action_TopicDetail       Action = 201
	Action_TopicEventPublish Action = 202
	// Collection Permissions: 3XX
	Action_CollectionDocumentRead   Action = 300
	Action_CollectionDocumentWrite  Action = 301
	Action_CollectionDocumentDelete Action = 302
	Action_CollectionQuery          Action = 303
	Action_CollectionList           Action = 304
	// Secret Permissions: 5XX
	Action_SecretPut    Action = 400
	Action_SecretAccess Action = 401
	// Websocket Permissions: 6XX
	Action_WebsocketManage Action = 500
)

// Enum value maps for Action.
var (
	Action_name = map[int32]string{
		0:   "BucketFileList",
		1:   "BucketFileGet",
		2:   "BucketFilePut",
		3:   "BucketFileDelete",
		200: "TopicList",
		201: "TopicDetail",
		202: "TopicEventPublish",
		300: "CollectionDocumentRead",
		301: "CollectionDocumentWrite",
		302: "CollectionDocumentDelete",
		303: "CollectionQuery",
		304: "CollectionList",
		400: "SecretPut",
		401: "SecretAccess",
		500: "WebsocketManage",
	}
	Action_value = map[string]int32{
		"BucketFileList":           0,
		"BucketFileGet":            1,
		"BucketFilePut":            2,
		"BucketFileDelete":         3,
		"TopicList":                200,
		"TopicDetail":              201,
		"TopicEventPublish":        202,
		"CollectionDocumentRead":   300,
		"CollectionDocumentWrite":  301,
		"CollectionDocumentDelete": 302,
		"CollectionQuery":          303,
		"CollectionList":           304,
		"SecretPut":                400,
		"SecretAccess":             401,
		"WebsocketManage":          500,
	}
)

func (x Action) Enum() *Action {
	p := new(Action)
	*p = x
	return p
}

func (x Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Action) Descriptor() protoreflect.EnumDescriptor {
	return file_nitric_proto_resources_v1_resources_proto_enumTypes[1].Descriptor()
}

func (Action) Type() protoreflect.EnumType {
	return &file_nitric_proto_resources_v1_resources_proto_enumTypes[1]
}

func (x Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Action.Descriptor instead.
func (Action) EnumDescriptor() ([]byte, []int) {
	return file_nitric_proto_resources_v1_resources_proto_rawDescGZIP(), []int{1}
}

type PolicyResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Principals []*ResourceIdentifier `protobuf:"bytes,1,rep,name=principals,proto3" json:"principals,omitempty"`
	Actions    []Action              `protobuf:"varint,2,rep,packed,name=actions,proto3,enum=nitric.proto.resources.v1.Action" json:"actions,omitempty"`
	Resources  []*ResourceIdentifier `protobuf:"bytes,3,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *PolicyResource) Reset() {
	*x = PolicyResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitric_proto_resources_v1_resources_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolicyResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyResource) ProtoMessage() {}

func (x *PolicyResource) ProtoReflect() protoreflect.Message {
	mi := &file_nitric_proto_resources_v1_resources_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyResource.ProtoReflect.Descriptor instead.
func (*PolicyResource) Descriptor() ([]byte, []int) {
	return file_nitric_proto_resources_v1_resources_proto_rawDescGZIP(), []int{0}
}

func (x *PolicyResource) GetPrincipals() []*ResourceIdentifier {
	if x != nil {
		return x.Principals
	}
	return nil
}

func (x *PolicyResource) GetActions() []Action {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *PolicyResource) GetResources() []*ResourceIdentifier {
	if x != nil {
		return x.Resources
	}
	return nil
}

// Unique identifier for a resource within a nitric application.
type ResourceIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type ResourceType `protobuf:"varint,1,opt,name=type,proto3,enum=nitric.proto.resources.v1.ResourceType" json:"type,omitempty"`
	Name string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ResourceIdentifier) Reset() {
	*x = ResourceIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitric_proto_resources_v1_resources_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceIdentifier) ProtoMessage() {}

func (x *ResourceIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_nitric_proto_resources_v1_resources_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceIdentifier.ProtoReflect.Descriptor instead.
func (*ResourceIdentifier) Descriptor() ([]byte, []int) {
	return file_nitric_proto_resources_v1_resources_proto_rawDescGZIP(), []int{1}
}

func (x *ResourceIdentifier) GetType() ResourceType {
	if x != nil {
		return x.Type
	}
	return ResourceType_Api
}

func (x *ResourceIdentifier) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ResourceDeclareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *ResourceIdentifier `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Config:
	//
	//	*ResourceDeclareRequest_Policy
	//	*ResourceDeclareRequest_Bucket
	//	*ResourceDeclareRequest_Topic
	//	*ResourceDeclareRequest_Collection
	//	*ResourceDeclareRequest_Secret
	//	*ResourceDeclareRequest_Api
	//	*ResourceDeclareRequest_ApiSecurityDefinition
	Config isResourceDeclareRequest_Config `protobuf_oneof:"config"`
}

func (x *ResourceDeclareRequest) Reset() {
	*x = ResourceDeclareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitric_proto_resources_v1_resources_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceDeclareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceDeclareRequest) ProtoMessage() {}

func (x *ResourceDeclareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nitric_proto_resources_v1_resources_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceDeclareRequest.ProtoReflect.Descriptor instead.
func (*ResourceDeclareRequest) Descriptor() ([]byte, []int) {
	return file_nitric_proto_resources_v1_resources_proto_rawDescGZIP(), []int{2}
}

func (x *ResourceDeclareRequest) GetId() *ResourceIdentifier {
	if x != nil {
		return x.Id
	}
	return nil
}

func (m *ResourceDeclareRequest) GetConfig() isResourceDeclareRequest_Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (x *ResourceDeclareRequest) GetPolicy() *PolicyResource {
	if x, ok := x.GetConfig().(*ResourceDeclareRequest_Policy); ok {
		return x.Policy
	}
	return nil
}

func (x *ResourceDeclareRequest) GetBucket() *BucketResource {
	if x, ok := x.GetConfig().(*ResourceDeclareRequest_Bucket); ok {
		return x.Bucket
	}
	return nil
}

func (x *ResourceDeclareRequest) GetTopic() *TopicResource {
	if x, ok := x.GetConfig().(*ResourceDeclareRequest_Topic); ok {
		return x.Topic
	}
	return nil
}

func (x *ResourceDeclareRequest) GetCollection() *CollectionResource {
	if x, ok := x.GetConfig().(*ResourceDeclareRequest_Collection); ok {
		return x.Collection
	}
	return nil
}

func (x *ResourceDeclareRequest) GetSecret() *SecretResource {
	if x, ok := x.GetConfig().(*ResourceDeclareRequest_Secret); ok {
		return x.Secret
	}
	return nil
}

func (x *ResourceDeclareRequest) GetApi() *ApiResource {
	if x, ok := x.GetConfig().(*ResourceDeclareRequest_Api); ok {
		return x.Api
	}
	return nil
}

func (x *ResourceDeclareRequest) GetApiSecurityDefinition() *ApiSecurityDefinitionResource {
	if x, ok := x.GetConfig().(*ResourceDeclareRequest_ApiSecurityDefinition); ok {
		return x.ApiSecurityDefinition
	}
	return nil
}

type isResourceDeclareRequest_Config interface {
	isResourceDeclareRequest_Config()
}

type ResourceDeclareRequest_Policy struct {
	Policy *PolicyResource `protobuf:"bytes,10,opt,name=policy,proto3,oneof"`
}

type ResourceDeclareRequest_Bucket struct {
	Bucket *BucketResource `protobuf:"bytes,11,opt,name=bucket,proto3,oneof"`
}

type ResourceDeclareRequest_Topic struct {
	Topic *TopicResource `protobuf:"bytes,12,opt,name=topic,proto3,oneof"`
}

type ResourceDeclareRequest_Collection struct {
	Collection *CollectionResource `protobuf:"bytes,13,opt,name=collection,proto3,oneof"`
}

type ResourceDeclareRequest_Secret struct {
	Secret *SecretResource `protobuf:"bytes,14,opt,name=secret,proto3,oneof"`
}

type ResourceDeclareRequest_Api struct {
	Api *ApiResource `protobuf:"bytes,15,opt,name=api,proto3,oneof"`
}

type ResourceDeclareRequest_ApiSecurityDefinition struct {
	ApiSecurityDefinition *ApiSecurityDefinitionResource `protobuf:"bytes,16,opt,name=api_security_definition,json=apiSecurityDefinition,proto3,oneof"`
}

func (*ResourceDeclareRequest_Policy) isResourceDeclareRequest_Config() {}

func (*ResourceDeclareRequest_Bucket) isResourceDeclareRequest_Config() {}

func (*ResourceDeclareRequest_Topic) isResourceDeclareRequest_Config() {}

func (*ResourceDeclareRequest_Collection) isResourceDeclareRequest_Config() {}

func (*ResourceDeclareRequest_Secret) isResourceDeclareRequest_Config() {}

func (*ResourceDeclareRequest_Api) isResourceDeclareRequest_Config() {}

func (*ResourceDeclareRequest_ApiSecurityDefinition) isResourceDeclareRequest_Config() {}

type BucketResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BucketResource) Reset() {
	*x = BucketResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitric_proto_resources_v1_resources_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BucketResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BucketResource) ProtoMessage() {}

func (x *BucketResource) ProtoReflect() protoreflect.Message {
	mi := &file_nitric_proto_resources_v1_resources_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BucketResource.ProtoReflect.Descriptor instead.
func (*BucketResource) Descriptor() ([]byte, []int) {
	return file_nitric_proto_resources_v1_resources_proto_rawDescGZIP(), []int{3}
}

type TopicResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TopicResource) Reset() {
	*x = TopicResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitric_proto_resources_v1_resources_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicResource) ProtoMessage() {}

func (x *TopicResource) ProtoReflect() protoreflect.Message {
	mi := &file_nitric_proto_resources_v1_resources_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicResource.ProtoReflect.Descriptor instead.
func (*TopicResource) Descriptor() ([]byte, []int) {
	return file_nitric_proto_resources_v1_resources_proto_rawDescGZIP(), []int{4}
}

type CollectionResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CollectionResource) Reset() {
	*x = CollectionResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitric_proto_resources_v1_resources_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionResource) ProtoMessage() {}

func (x *CollectionResource) ProtoReflect() protoreflect.Message {
	mi := &file_nitric_proto_resources_v1_resources_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionResource.ProtoReflect.Descriptor instead.
func (*CollectionResource) Descriptor() ([]byte, []int) {
	return file_nitric_proto_resources_v1_resources_proto_rawDescGZIP(), []int{5}
}

type SecretResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SecretResource) Reset() {
	*x = SecretResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitric_proto_resources_v1_resources_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretResource) ProtoMessage() {}

func (x *SecretResource) ProtoReflect() protoreflect.Message {
	mi := &file_nitric_proto_resources_v1_resources_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretResource.ProtoReflect.Descriptor instead.
func (*SecretResource) Descriptor() ([]byte, []int) {
	return file_nitric_proto_resources_v1_resources_proto_rawDescGZIP(), []int{6}
}

type ApiOpenIdConnectionDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Issuer    string   `protobuf:"bytes,1,opt,name=issuer,proto3" json:"issuer,omitempty"`
	Audiences []string `protobuf:"bytes,2,rep,name=audiences,proto3" json:"audiences,omitempty"`
}

func (x *ApiOpenIdConnectionDefinition) Reset() {
	*x = ApiOpenIdConnectionDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitric_proto_resources_v1_resources_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiOpenIdConnectionDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiOpenIdConnectionDefinition) ProtoMessage() {}

func (x *ApiOpenIdConnectionDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_nitric_proto_resources_v1_resources_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiOpenIdConnectionDefinition.ProtoReflect.Descriptor instead.
func (*ApiOpenIdConnectionDefinition) Descriptor() ([]byte, []int) {
	return file_nitric_proto_resources_v1_resources_proto_rawDescGZIP(), []int{7}
}

func (x *ApiOpenIdConnectionDefinition) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *ApiOpenIdConnectionDefinition) GetAudiences() []string {
	if x != nil {
		return x.Audiences
	}
	return nil
}

type ApiSecurityDefinitionResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiName string `protobuf:"bytes,1,opt,name=api_name,json=apiName,proto3" json:"api_name,omitempty"`
	// Types that are assignable to Definition:
	//
	//	*ApiSecurityDefinitionResource_Oidc
	Definition isApiSecurityDefinitionResource_Definition `protobuf_oneof:"definition"`
}

func (x *ApiSecurityDefinitionResource) Reset() {
	*x = ApiSecurityDefinitionResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitric_proto_resources_v1_resources_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiSecurityDefinitionResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiSecurityDefinitionResource) ProtoMessage() {}

func (x *ApiSecurityDefinitionResource) ProtoReflect() protoreflect.Message {
	mi := &file_nitric_proto_resources_v1_resources_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiSecurityDefinitionResource.ProtoReflect.Descriptor instead.
func (*ApiSecurityDefinitionResource) Descriptor() ([]byte, []int) {
	return file_nitric_proto_resources_v1_resources_proto_rawDescGZIP(), []int{8}
}

func (x *ApiSecurityDefinitionResource) GetApiName() string {
	if x != nil {
		return x.ApiName
	}
	return ""
}

func (m *ApiSecurityDefinitionResource) GetDefinition() isApiSecurityDefinitionResource_Definition {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (x *ApiSecurityDefinitionResource) GetOidc() *ApiOpenIdConnectionDefinition {
	if x, ok := x.GetDefinition().(*ApiSecurityDefinitionResource_Oidc); ok {
		return x.Oidc
	}
	return nil
}

type isApiSecurityDefinitionResource_Definition interface {
	isApiSecurityDefinitionResource_Definition()
}

type ApiSecurityDefinitionResource_Oidc struct {
	Oidc *ApiOpenIdConnectionDefinition `protobuf:"bytes,2,opt,name=oidc,proto3,oneof"`
}

func (*ApiSecurityDefinitionResource_Oidc) isApiSecurityDefinitionResource_Definition() {}

type ApiScopes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scopes []string `protobuf:"bytes,1,rep,name=scopes,proto3" json:"scopes,omitempty"`
}

func (x *ApiScopes) Reset() {
	*x = ApiScopes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitric_proto_resources_v1_resources_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiScopes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiScopes) ProtoMessage() {}

func (x *ApiScopes) ProtoReflect() protoreflect.Message {
	mi := &file_nitric_proto_resources_v1_resources_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiScopes.ProtoReflect.Descriptor instead.
func (*ApiScopes) Descriptor() ([]byte, []int) {
	return file_nitric_proto_resources_v1_resources_proto_rawDescGZIP(), []int{9}
}

func (x *ApiScopes) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

type ApiResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// root level security map for this api
	// references ApiSecurityDefinitionResource(s)
	Security map[string]*ApiScopes `protobuf:"bytes,1,rep,name=security,proto3" json:"security,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ApiResource) Reset() {
	*x = ApiResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitric_proto_resources_v1_resources_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResource) ProtoMessage() {}

func (x *ApiResource) ProtoReflect() protoreflect.Message {
	mi := &file_nitric_proto_resources_v1_resources_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResource.ProtoReflect.Descriptor instead.
func (*ApiResource) Descriptor() ([]byte, []int) {
	return file_nitric_proto_resources_v1_resources_proto_rawDescGZIP(), []int{10}
}

func (x *ApiResource) GetSecurity() map[string]*ApiScopes {
	if x != nil {
		return x.Security
	}
	return nil
}

type ResourceDeclareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResourceDeclareResponse) Reset() {
	*x = ResourceDeclareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitric_proto_resources_v1_resources_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceDeclareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceDeclareResponse) ProtoMessage() {}

func (x *ResourceDeclareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nitric_proto_resources_v1_resources_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceDeclareResponse.ProtoReflect.Descriptor instead.
func (*ResourceDeclareResponse) Descriptor() ([]byte, []int) {
	return file_nitric_proto_resources_v1_resources_proto_rawDescGZIP(), []int{11}
}

var File_nitric_proto_resources_v1_resources_proto protoreflect.FileDescriptor

var file_nitric_proto_resources_v1_resources_proto_rawDesc = []byte{
	0x0a, 0x29, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x6e, 0x69, 0x74,
	0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x22, 0xe9, 0x01, 0x0a, 0x0e, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x0a, 0x70, 0x72, 0x69,
	0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0a, 0x70, 0x72,
	0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x73, 0x12, 0x3b, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x6e, 0x69, 0x74, 0x72,
	0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4b, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69,
	0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x22, 0x65, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xf3, 0x04, 0x0a, 0x16, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x43, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x00,
	0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x43, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69,
	0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x48, 0x00, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x40, 0x0a,
	0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e,
	0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x00, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12,
	0x4f, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x43, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x00, 0x52, 0x06, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x3a, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x70, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x00, 0x52, 0x03, 0x61, 0x70,
	0x69, 0x12, 0x72, 0x0a, 0x17, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x38, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x70, 0x69, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x00, 0x52, 0x15,
	0x61, 0x70, 0x69, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22,
	0x10, 0x0a, 0x0e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x22, 0x0f, 0x0a, 0x0d, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x55, 0x0a, 0x1d, 0x41, 0x70,
	0x69, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x22, 0x98, 0x01, 0x0a, 0x1d, 0x41, 0x70, 0x69, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x69, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x69, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4e,
	0x0a, 0x04, 0x6f, 0x69, 0x64, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x6e,
	0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x69, 0x4f, 0x70, 0x65, 0x6e,
	0x49, 0x64, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x04, 0x6f, 0x69, 0x64, 0x63, 0x42, 0x0c,
	0x0a, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x23, 0x0a, 0x09,
	0x41, 0x70, 0x69, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x73, 0x22, 0xc2, 0x01, 0x0a, 0x0b, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x50, 0x0a, 0x08, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x1a, 0x61, 0x0a, 0x0d, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x70, 0x69, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x19, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x44, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2a, 0xcb, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x70, 0x69, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x10, 0x03, 0x12,
	0x0c, 0x0a, 0x08, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x10, 0x04, 0x12, 0x10, 0x0a,
	0x0c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x05, 0x12,
	0x0e, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x06, 0x12,
	0x0a, 0x0a, 0x06, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x10, 0x07, 0x12, 0x0a, 0x0a, 0x06, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x10, 0x08, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x10, 0x09, 0x12, 0x0d, 0x0a, 0x09, 0x57,
	0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x10, 0x0a, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x74,
	0x74, 0x70, 0x10, 0x0b, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x70, 0x69, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x0c, 0x2a,
	0xd0, 0x02, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x10,
	0x01, 0x12, 0x11, 0x0a, 0x0d, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x50,
	0x75, 0x74, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x09, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x10, 0xc8, 0x01, 0x12, 0x10, 0x0a, 0x0b, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x10, 0xc9, 0x01, 0x12, 0x16, 0x0a, 0x11,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x10, 0xca, 0x01, 0x12, 0x1b, 0x0a, 0x16, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x64, 0x10, 0xac,
	0x02, 0x12, 0x1c, 0x0a, 0x17, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x10, 0xad, 0x02, 0x12,
	0x1d, 0x0a, 0x18, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x10, 0xae, 0x02, 0x12, 0x14,
	0x0a, 0x0f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x10, 0xaf, 0x02, 0x12, 0x13, 0x0a, 0x0e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x10, 0xb0, 0x02, 0x12, 0x0e, 0x0a, 0x09, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x50, 0x75, 0x74, 0x10, 0x90, 0x03, 0x12, 0x11, 0x0a, 0x0c, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x91, 0x03, 0x12, 0x14, 0x0a, 0x0f,
	0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x10,
	0xf4, 0x03, 0x32, 0x7d, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12,
	0x70, 0x0a, 0x07, 0x44, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x65, 0x12, 0x31, 0x2e, 0x6e, 0x69, 0x74,
	0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44,
	0x65, 0x63, 0x6c, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e,
	0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x44, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0xa9, 0x01, 0x0a, 0x1c, 0x69, 0x6f, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x42, 0x09, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x50, 0x01, 0x5a,
	0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x69, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x70, 0x62, 0xaa, 0x02, 0x19, 0x4e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0xca, 0x02, 0x19, 0x4e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x5c, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x5c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x5c, 0x56, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nitric_proto_resources_v1_resources_proto_rawDescOnce sync.Once
	file_nitric_proto_resources_v1_resources_proto_rawDescData = file_nitric_proto_resources_v1_resources_proto_rawDesc
)

func file_nitric_proto_resources_v1_resources_proto_rawDescGZIP() []byte {
	file_nitric_proto_resources_v1_resources_proto_rawDescOnce.Do(func() {
		file_nitric_proto_resources_v1_resources_proto_rawDescData = protoimpl.X.CompressGZIP(file_nitric_proto_resources_v1_resources_proto_rawDescData)
	})
	return file_nitric_proto_resources_v1_resources_proto_rawDescData
}

var file_nitric_proto_resources_v1_resources_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_nitric_proto_resources_v1_resources_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_nitric_proto_resources_v1_resources_proto_goTypes = []interface{}{
	(ResourceType)(0),                     // 0: nitric.proto.resources.v1.ResourceType
	(Action)(0),                           // 1: nitric.proto.resources.v1.Action
	(*PolicyResource)(nil),                // 2: nitric.proto.resources.v1.PolicyResource
	(*ResourceIdentifier)(nil),            // 3: nitric.proto.resources.v1.ResourceIdentifier
	(*ResourceDeclareRequest)(nil),        // 4: nitric.proto.resources.v1.ResourceDeclareRequest
	(*BucketResource)(nil),                // 5: nitric.proto.resources.v1.BucketResource
	(*TopicResource)(nil),                 // 6: nitric.proto.resources.v1.TopicResource
	(*CollectionResource)(nil),            // 7: nitric.proto.resources.v1.CollectionResource
	(*SecretResource)(nil),                // 8: nitric.proto.resources.v1.SecretResource
	(*ApiOpenIdConnectionDefinition)(nil), // 9: nitric.proto.resources.v1.ApiOpenIdConnectionDefinition
	(*ApiSecurityDefinitionResource)(nil), // 10: nitric.proto.resources.v1.ApiSecurityDefinitionResource
	(*ApiScopes)(nil),                     // 11: nitric.proto.resources.v1.ApiScopes
	(*ApiResource)(nil),                   // 12: nitric.proto.resources.v1.ApiResource
	(*ResourceDeclareResponse)(nil),       // 13: nitric.proto.resources.v1.ResourceDeclareResponse
	nil,                                   // 14: nitric.proto.resources.v1.ApiResource.SecurityEntry
}
var file_nitric_proto_resources_v1_resources_proto_depIdxs = []int32{
	3,  // 0: nitric.proto.resources.v1.PolicyResource.principals:type_name -> nitric.proto.resources.v1.ResourceIdentifier
	1,  // 1: nitric.proto.resources.v1.PolicyResource.actions:type_name -> nitric.proto.resources.v1.Action
	3,  // 2: nitric.proto.resources.v1.PolicyResource.resources:type_name -> nitric.proto.resources.v1.ResourceIdentifier
	0,  // 3: nitric.proto.resources.v1.ResourceIdentifier.type:type_name -> nitric.proto.resources.v1.ResourceType
	3,  // 4: nitric.proto.resources.v1.ResourceDeclareRequest.id:type_name -> nitric.proto.resources.v1.ResourceIdentifier
	2,  // 5: nitric.proto.resources.v1.ResourceDeclareRequest.policy:type_name -> nitric.proto.resources.v1.PolicyResource
	5,  // 6: nitric.proto.resources.v1.ResourceDeclareRequest.bucket:type_name -> nitric.proto.resources.v1.BucketResource
	6,  // 7: nitric.proto.resources.v1.ResourceDeclareRequest.topic:type_name -> nitric.proto.resources.v1.TopicResource
	7,  // 8: nitric.proto.resources.v1.ResourceDeclareRequest.collection:type_name -> nitric.proto.resources.v1.CollectionResource
	8,  // 9: nitric.proto.resources.v1.ResourceDeclareRequest.secret:type_name -> nitric.proto.resources.v1.SecretResource
	12, // 10: nitric.proto.resources.v1.ResourceDeclareRequest.api:type_name -> nitric.proto.resources.v1.ApiResource
	10, // 11: nitric.proto.resources.v1.ResourceDeclareRequest.api_security_definition:type_name -> nitric.proto.resources.v1.ApiSecurityDefinitionResource
	9,  // 12: nitric.proto.resources.v1.ApiSecurityDefinitionResource.oidc:type_name -> nitric.proto.resources.v1.ApiOpenIdConnectionDefinition
	14, // 13: nitric.proto.resources.v1.ApiResource.security:type_name -> nitric.proto.resources.v1.ApiResource.SecurityEntry
	11, // 14: nitric.proto.resources.v1.ApiResource.SecurityEntry.value:type_name -> nitric.proto.resources.v1.ApiScopes
	4,  // 15: nitric.proto.resources.v1.Resources.Declare:input_type -> nitric.proto.resources.v1.ResourceDeclareRequest
	13, // 16: nitric.proto.resources.v1.Resources.Declare:output_type -> nitric.proto.resources.v1.ResourceDeclareResponse
	16, // [16:17] is the sub-list for method output_type
	15, // [15:16] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_nitric_proto_resources_v1_resources_proto_init() }
func file_nitric_proto_resources_v1_resources_proto_init() {
	if File_nitric_proto_resources_v1_resources_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_nitric_proto_resources_v1_resources_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PolicyResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nitric_proto_resources_v1_resources_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nitric_proto_resources_v1_resources_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceDeclareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nitric_proto_resources_v1_resources_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BucketResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nitric_proto_resources_v1_resources_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nitric_proto_resources_v1_resources_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nitric_proto_resources_v1_resources_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecretResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nitric_proto_resources_v1_resources_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiOpenIdConnectionDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nitric_proto_resources_v1_resources_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiSecurityDefinitionResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nitric_proto_resources_v1_resources_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiScopes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nitric_proto_resources_v1_resources_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nitric_proto_resources_v1_resources_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceDeclareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_nitric_proto_resources_v1_resources_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ResourceDeclareRequest_Policy)(nil),
		(*ResourceDeclareRequest_Bucket)(nil),
		(*ResourceDeclareRequest_Topic)(nil),
		(*ResourceDeclareRequest_Collection)(nil),
		(*ResourceDeclareRequest_Secret)(nil),
		(*ResourceDeclareRequest_Api)(nil),
		(*ResourceDeclareRequest_ApiSecurityDefinition)(nil),
	}
	file_nitric_proto_resources_v1_resources_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*ApiSecurityDefinitionResource_Oidc)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nitric_proto_resources_v1_resources_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nitric_proto_resources_v1_resources_proto_goTypes,
		DependencyIndexes: file_nitric_proto_resources_v1_resources_proto_depIdxs,
		EnumInfos:         file_nitric_proto_resources_v1_resources_proto_enumTypes,
		MessageInfos:      file_nitric_proto_resources_v1_resources_proto_msgTypes,
	}.Build()
	File_nitric_proto_resources_v1_resources_proto = out.File
	file_nitric_proto_resources_v1_resources_proto_rawDesc = nil
	file_nitric_proto_resources_v1_resources_proto_goTypes = nil
	file_nitric_proto_resources_v1_resources_proto_depIdxs = nil
}

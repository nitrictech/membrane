// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.4
// source: nitric/proto/websockets/v1/websockets.proto

package websocketspb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WebsocketEventType int32

const (
	// Specialised Event for handling new client connections
	WebsocketEventType_Connect WebsocketEventType = 0
	// Specialised Event for handling existing client connections
	WebsocketEventType_Disconnect WebsocketEventType = 1
	// All other types of events are messages
	WebsocketEventType_Message WebsocketEventType = 2
)

// Enum value maps for WebsocketEventType.
var (
	WebsocketEventType_name = map[int32]string{
		0: "Connect",
		1: "Disconnect",
		2: "Message",
	}
	WebsocketEventType_value = map[string]int32{
		"Connect":    0,
		"Disconnect": 1,
		"Message":    2,
	}
)

func (x WebsocketEventType) Enum() *WebsocketEventType {
	p := new(WebsocketEventType)
	*p = x
	return p
}

func (x WebsocketEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WebsocketEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_nitric_proto_websockets_v1_websockets_proto_enumTypes[0].Descriptor()
}

func (WebsocketEventType) Type() protoreflect.EnumType {
	return &file_nitric_proto_websockets_v1_websockets_proto_enumTypes[0]
}

func (x WebsocketEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WebsocketEventType.Descriptor instead.
func (WebsocketEventType) EnumDescriptor() ([]byte, []int) {
	return file_nitric_proto_websockets_v1_websockets_proto_rawDescGZIP(), []int{0}
}

type WebsocketDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SocketName string `protobuf:"bytes,1,opt,name=socket_name,json=socketName,proto3" json:"socket_name,omitempty"`
}

func (x *WebsocketDetailsRequest) Reset() {
	*x = WebsocketDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitric_proto_websockets_v1_websockets_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebsocketDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebsocketDetailsRequest) ProtoMessage() {}

func (x *WebsocketDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nitric_proto_websockets_v1_websockets_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebsocketDetailsRequest.ProtoReflect.Descriptor instead.
func (*WebsocketDetailsRequest) Descriptor() ([]byte, []int) {
	return file_nitric_proto_websockets_v1_websockets_proto_rawDescGZIP(), []int{0}
}

func (x *WebsocketDetailsRequest) GetSocketName() string {
	if x != nil {
		return x.SocketName
	}
	return ""
}

type WebsocketDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *WebsocketDetailsResponse) Reset() {
	*x = WebsocketDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitric_proto_websockets_v1_websockets_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebsocketDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebsocketDetailsResponse) ProtoMessage() {}

func (x *WebsocketDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nitric_proto_websockets_v1_websockets_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebsocketDetailsResponse.ProtoReflect.Descriptor instead.
func (*WebsocketDetailsResponse) Descriptor() ([]byte, []int) {
	return file_nitric_proto_websockets_v1_websockets_proto_rawDescGZIP(), []int{1}
}

func (x *WebsocketDetailsResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type WebsocketSendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The nitric name of the socket to send on
	SocketName string `protobuf:"bytes,1,opt,name=socket_name,json=socketName,proto3" json:"socket_name,omitempty"`
	// The connection ID of the client to send to
	ConnectionId string `protobuf:"bytes,2,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	// The data to send to the socket
	Data []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WebsocketSendRequest) Reset() {
	*x = WebsocketSendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitric_proto_websockets_v1_websockets_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebsocketSendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebsocketSendRequest) ProtoMessage() {}

func (x *WebsocketSendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nitric_proto_websockets_v1_websockets_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebsocketSendRequest.ProtoReflect.Descriptor instead.
func (*WebsocketSendRequest) Descriptor() ([]byte, []int) {
	return file_nitric_proto_websockets_v1_websockets_proto_rawDescGZIP(), []int{2}
}

func (x *WebsocketSendRequest) GetSocketName() string {
	if x != nil {
		return x.SocketName
	}
	return ""
}

func (x *WebsocketSendRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *WebsocketSendRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type WebsocketSendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WebsocketSendResponse) Reset() {
	*x = WebsocketSendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitric_proto_websockets_v1_websockets_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebsocketSendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebsocketSendResponse) ProtoMessage() {}

func (x *WebsocketSendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nitric_proto_websockets_v1_websockets_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebsocketSendResponse.ProtoReflect.Descriptor instead.
func (*WebsocketSendResponse) Descriptor() ([]byte, []int) {
	return file_nitric_proto_websockets_v1_websockets_proto_rawDescGZIP(), []int{3}
}

type WebsocketCloseConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The nitric name of the socket to send on
	SocketName string `protobuf:"bytes,1,opt,name=socket_name,json=socketName,proto3" json:"socket_name,omitempty"`
	// The connection ID of the client to send to
	ConnectionId string `protobuf:"bytes,2,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
}

func (x *WebsocketCloseConnectionRequest) Reset() {
	*x = WebsocketCloseConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitric_proto_websockets_v1_websockets_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebsocketCloseConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebsocketCloseConnectionRequest) ProtoMessage() {}

func (x *WebsocketCloseConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nitric_proto_websockets_v1_websockets_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebsocketCloseConnectionRequest.ProtoReflect.Descriptor instead.
func (*WebsocketCloseConnectionRequest) Descriptor() ([]byte, []int) {
	return file_nitric_proto_websockets_v1_websockets_proto_rawDescGZIP(), []int{4}
}

func (x *WebsocketCloseConnectionRequest) GetSocketName() string {
	if x != nil {
		return x.SocketName
	}
	return ""
}

func (x *WebsocketCloseConnectionRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

type WebsocketCloseConnectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WebsocketCloseConnectionResponse) Reset() {
	*x = WebsocketCloseConnectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitric_proto_websockets_v1_websockets_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebsocketCloseConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebsocketCloseConnectionResponse) ProtoMessage() {}

func (x *WebsocketCloseConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nitric_proto_websockets_v1_websockets_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebsocketCloseConnectionResponse.ProtoReflect.Descriptor instead.
func (*WebsocketCloseConnectionResponse) Descriptor() ([]byte, []int) {
	return file_nitric_proto_websockets_v1_websockets_proto_rawDescGZIP(), []int{5}
}

// Messages the client is able to send to the server
type ClientMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Client message ID, used to pair requests/responses
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Content:
	//
	//	*ClientMessage_RegistrationRequest
	//	*ClientMessage_WebsocketEventResponse
	Content isClientMessage_Content `protobuf_oneof:"content"`
}

func (x *ClientMessage) Reset() {
	*x = ClientMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitric_proto_websockets_v1_websockets_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMessage) ProtoMessage() {}

func (x *ClientMessage) ProtoReflect() protoreflect.Message {
	mi := &file_nitric_proto_websockets_v1_websockets_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMessage.ProtoReflect.Descriptor instead.
func (*ClientMessage) Descriptor() ([]byte, []int) {
	return file_nitric_proto_websockets_v1_websockets_proto_rawDescGZIP(), []int{6}
}

func (x *ClientMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *ClientMessage) GetContent() isClientMessage_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *ClientMessage) GetRegistrationRequest() *RegistrationRequest {
	if x, ok := x.GetContent().(*ClientMessage_RegistrationRequest); ok {
		return x.RegistrationRequest
	}
	return nil
}

func (x *ClientMessage) GetWebsocketEventResponse() *WebsocketEventResponse {
	if x, ok := x.GetContent().(*ClientMessage_WebsocketEventResponse); ok {
		return x.WebsocketEventResponse
	}
	return nil
}

type isClientMessage_Content interface {
	isClientMessage_Content()
}

type ClientMessage_RegistrationRequest struct {
	// Client initialisation request
	// A worker will not be eligible for triggers
	// until it has identified itself
	RegistrationRequest *RegistrationRequest `protobuf:"bytes,2,opt,name=registration_request,json=registrationRequest,proto3,oneof"`
}

type ClientMessage_WebsocketEventResponse struct {
	// Client responding with result of a trigger
	WebsocketEventResponse *WebsocketEventResponse `protobuf:"bytes,3,opt,name=websocket_event_response,json=websocketEventResponse,proto3,oneof"`
}

func (*ClientMessage_RegistrationRequest) isClientMessage_Content() {}

func (*ClientMessage_WebsocketEventResponse) isClientMessage_Content() {}

// Placeholder message
type RegistrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RegistrationResponse) Reset() {
	*x = RegistrationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitric_proto_websockets_v1_websockets_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationResponse) ProtoMessage() {}

func (x *RegistrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nitric_proto_websockets_v1_websockets_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationResponse.ProtoReflect.Descriptor instead.
func (*RegistrationResponse) Descriptor() ([]byte, []int) {
	return file_nitric_proto_websockets_v1_websockets_proto_rawDescGZIP(), []int{7}
}

type RegistrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The nitric name of the socket that this worker listens on
	SocketName string `protobuf:"bytes,1,opt,name=socket_name,json=socketName,proto3" json:"socket_name,omitempty"`
	// The type of event that this worker handles
	EventType WebsocketEventType `protobuf:"varint,2,opt,name=event_type,json=eventType,proto3,enum=nitric.proto.websockets.v1.WebsocketEventType" json:"event_type,omitempty"`
}

func (x *RegistrationRequest) Reset() {
	*x = RegistrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitric_proto_websockets_v1_websockets_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationRequest) ProtoMessage() {}

func (x *RegistrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nitric_proto_websockets_v1_websockets_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationRequest.ProtoReflect.Descriptor instead.
func (*RegistrationRequest) Descriptor() ([]byte, []int) {
	return file_nitric_proto_websockets_v1_websockets_proto_rawDescGZIP(), []int{8}
}

func (x *RegistrationRequest) GetSocketName() string {
	if x != nil {
		return x.SocketName
	}
	return ""
}

func (x *RegistrationRequest) GetEventType() WebsocketEventType {
	if x != nil {
		return x.EventType
	}
	return WebsocketEventType_Connect
}

type WebsocketEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The nitric name of the socket that this worker listens on
	SocketName string `protobuf:"bytes,1,opt,name=socket_name,json=socketName,proto3" json:"socket_name,omitempty"`
	// The connection this trigger came from
	ConnectionId string `protobuf:"bytes,2,opt,name=connectionId,proto3" json:"connectionId,omitempty"`
	// Types that are assignable to WebsocketEvent:
	//
	//	*WebsocketEventRequest_Connection
	//	*WebsocketEventRequest_Disconnection
	//	*WebsocketEventRequest_Message
	WebsocketEvent isWebsocketEventRequest_WebsocketEvent `protobuf_oneof:"websocket_event"`
}

func (x *WebsocketEventRequest) Reset() {
	*x = WebsocketEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitric_proto_websockets_v1_websockets_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebsocketEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebsocketEventRequest) ProtoMessage() {}

func (x *WebsocketEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nitric_proto_websockets_v1_websockets_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebsocketEventRequest.ProtoReflect.Descriptor instead.
func (*WebsocketEventRequest) Descriptor() ([]byte, []int) {
	return file_nitric_proto_websockets_v1_websockets_proto_rawDescGZIP(), []int{9}
}

func (x *WebsocketEventRequest) GetSocketName() string {
	if x != nil {
		return x.SocketName
	}
	return ""
}

func (x *WebsocketEventRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (m *WebsocketEventRequest) GetWebsocketEvent() isWebsocketEventRequest_WebsocketEvent {
	if m != nil {
		return m.WebsocketEvent
	}
	return nil
}

func (x *WebsocketEventRequest) GetConnection() *WebsocketConnectionEvent {
	if x, ok := x.GetWebsocketEvent().(*WebsocketEventRequest_Connection); ok {
		return x.Connection
	}
	return nil
}

func (x *WebsocketEventRequest) GetDisconnection() *WebsocketDisconnectionEvent {
	if x, ok := x.GetWebsocketEvent().(*WebsocketEventRequest_Disconnection); ok {
		return x.Disconnection
	}
	return nil
}

func (x *WebsocketEventRequest) GetMessage() *WebsocketMessageEvent {
	if x, ok := x.GetWebsocketEvent().(*WebsocketEventRequest_Message); ok {
		return x.Message
	}
	return nil
}

type isWebsocketEventRequest_WebsocketEvent interface {
	isWebsocketEventRequest_WebsocketEvent()
}

type WebsocketEventRequest_Connection struct {
	Connection *WebsocketConnectionEvent `protobuf:"bytes,10,opt,name=connection,proto3,oneof"`
}

type WebsocketEventRequest_Disconnection struct {
	Disconnection *WebsocketDisconnectionEvent `protobuf:"bytes,11,opt,name=disconnection,proto3,oneof"`
}

type WebsocketEventRequest_Message struct {
	Message *WebsocketMessageEvent `protobuf:"bytes,12,opt,name=message,proto3,oneof"`
}

func (*WebsocketEventRequest_Connection) isWebsocketEventRequest_WebsocketEvent() {}

func (*WebsocketEventRequest_Disconnection) isWebsocketEventRequest_WebsocketEvent() {}

func (*WebsocketEventRequest_Message) isWebsocketEventRequest_WebsocketEvent() {}

type QueryValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []string `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *QueryValue) Reset() {
	*x = QueryValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitric_proto_websockets_v1_websockets_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryValue) ProtoMessage() {}

func (x *QueryValue) ProtoReflect() protoreflect.Message {
	mi := &file_nitric_proto_websockets_v1_websockets_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryValue.ProtoReflect.Descriptor instead.
func (*QueryValue) Descriptor() ([]byte, []int) {
	return file_nitric_proto_websockets_v1_websockets_proto_rawDescGZIP(), []int{10}
}

func (x *QueryValue) GetValue() []string {
	if x != nil {
		return x.Value
	}
	return nil
}

// Messages the server is able to send to the client
type ServerMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Server message ID, used to pair requests/responses
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Content:
	//
	//	*ServerMessage_RegistrationResponse
	//	*ServerMessage_WebsocketEventRequest
	Content isServerMessage_Content `protobuf_oneof:"content"`
}

func (x *ServerMessage) Reset() {
	*x = ServerMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitric_proto_websockets_v1_websockets_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMessage) ProtoMessage() {}

func (x *ServerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_nitric_proto_websockets_v1_websockets_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMessage.ProtoReflect.Descriptor instead.
func (*ServerMessage) Descriptor() ([]byte, []int) {
	return file_nitric_proto_websockets_v1_websockets_proto_rawDescGZIP(), []int{11}
}

func (x *ServerMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *ServerMessage) GetContent() isServerMessage_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *ServerMessage) GetRegistrationResponse() *RegistrationResponse {
	if x, ok := x.GetContent().(*ServerMessage_RegistrationResponse); ok {
		return x.RegistrationResponse
	}
	return nil
}

func (x *ServerMessage) GetWebsocketEventRequest() *WebsocketEventRequest {
	if x, ok := x.GetContent().(*ServerMessage_WebsocketEventRequest); ok {
		return x.WebsocketEventRequest
	}
	return nil
}

type isServerMessage_Content interface {
	isServerMessage_Content()
}

type ServerMessage_RegistrationResponse struct {
	// Server responding
	// with client configuration details to an
	// InitRequest
	RegistrationResponse *RegistrationResponse `protobuf:"bytes,2,opt,name=registration_response,json=registrationResponse,proto3,oneof"`
}

type ServerMessage_WebsocketEventRequest struct {
	// Server requesting client to process an event
	WebsocketEventRequest *WebsocketEventRequest `protobuf:"bytes,3,opt,name=websocket_event_request,json=websocketEventRequest,proto3,oneof"`
}

func (*ServerMessage_RegistrationResponse) isServerMessage_Content() {}

func (*ServerMessage_WebsocketEventRequest) isServerMessage_Content() {}

type WebsocketEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to WebsocketResponse:
	//
	//	*WebsocketEventResponse_ConnectionResponse
	WebsocketResponse isWebsocketEventResponse_WebsocketResponse `protobuf_oneof:"websocket_response"`
}

func (x *WebsocketEventResponse) Reset() {
	*x = WebsocketEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitric_proto_websockets_v1_websockets_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebsocketEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebsocketEventResponse) ProtoMessage() {}

func (x *WebsocketEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nitric_proto_websockets_v1_websockets_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebsocketEventResponse.ProtoReflect.Descriptor instead.
func (*WebsocketEventResponse) Descriptor() ([]byte, []int) {
	return file_nitric_proto_websockets_v1_websockets_proto_rawDescGZIP(), []int{12}
}

func (m *WebsocketEventResponse) GetWebsocketResponse() isWebsocketEventResponse_WebsocketResponse {
	if m != nil {
		return m.WebsocketResponse
	}
	return nil
}

func (x *WebsocketEventResponse) GetConnectionResponse() *WebsocketConnectionResponse {
	if x, ok := x.GetWebsocketResponse().(*WebsocketEventResponse_ConnectionResponse); ok {
		return x.ConnectionResponse
	}
	return nil
}

type isWebsocketEventResponse_WebsocketResponse interface {
	isWebsocketEventResponse_WebsocketResponse()
}

type WebsocketEventResponse_ConnectionResponse struct {
	ConnectionResponse *WebsocketConnectionResponse `protobuf:"bytes,10,opt,name=connection_response,json=connectionResponse,proto3,oneof"`
}

func (*WebsocketEventResponse_ConnectionResponse) isWebsocketEventResponse_WebsocketResponse() {}

type WebsocketConnectionEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The query params available in the connection request
	QueryParams map[string]*QueryValue `protobuf:"bytes,1,rep,name=query_params,json=queryParams,proto3" json:"query_params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *WebsocketConnectionEvent) Reset() {
	*x = WebsocketConnectionEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitric_proto_websockets_v1_websockets_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebsocketConnectionEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebsocketConnectionEvent) ProtoMessage() {}

func (x *WebsocketConnectionEvent) ProtoReflect() protoreflect.Message {
	mi := &file_nitric_proto_websockets_v1_websockets_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebsocketConnectionEvent.ProtoReflect.Descriptor instead.
func (*WebsocketConnectionEvent) Descriptor() ([]byte, []int) {
	return file_nitric_proto_websockets_v1_websockets_proto_rawDescGZIP(), []int{13}
}

func (x *WebsocketConnectionEvent) GetQueryParams() map[string]*QueryValue {
	if x != nil {
		return x.QueryParams
	}
	return nil
}

type WebsocketConnectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reject bool `protobuf:"varint,1,opt,name=reject,proto3" json:"reject,omitempty"`
}

func (x *WebsocketConnectionResponse) Reset() {
	*x = WebsocketConnectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitric_proto_websockets_v1_websockets_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebsocketConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebsocketConnectionResponse) ProtoMessage() {}

func (x *WebsocketConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nitric_proto_websockets_v1_websockets_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebsocketConnectionResponse.ProtoReflect.Descriptor instead.
func (*WebsocketConnectionResponse) Descriptor() ([]byte, []int) {
	return file_nitric_proto_websockets_v1_websockets_proto_rawDescGZIP(), []int{14}
}

func (x *WebsocketConnectionResponse) GetReject() bool {
	if x != nil {
		return x.Reject
	}
	return false
}

type WebsocketDisconnectionEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WebsocketDisconnectionEvent) Reset() {
	*x = WebsocketDisconnectionEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitric_proto_websockets_v1_websockets_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebsocketDisconnectionEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebsocketDisconnectionEvent) ProtoMessage() {}

func (x *WebsocketDisconnectionEvent) ProtoReflect() protoreflect.Message {
	mi := &file_nitric_proto_websockets_v1_websockets_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebsocketDisconnectionEvent.ProtoReflect.Descriptor instead.
func (*WebsocketDisconnectionEvent) Descriptor() ([]byte, []int) {
	return file_nitric_proto_websockets_v1_websockets_proto_rawDescGZIP(), []int{15}
}

type WebsocketMessageEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Data available on
	Body []byte `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *WebsocketMessageEvent) Reset() {
	*x = WebsocketMessageEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitric_proto_websockets_v1_websockets_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebsocketMessageEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebsocketMessageEvent) ProtoMessage() {}

func (x *WebsocketMessageEvent) ProtoReflect() protoreflect.Message {
	mi := &file_nitric_proto_websockets_v1_websockets_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebsocketMessageEvent.ProtoReflect.Descriptor instead.
func (*WebsocketMessageEvent) Descriptor() ([]byte, []int) {
	return file_nitric_proto_websockets_v1_websockets_proto_rawDescGZIP(), []int{16}
}

func (x *WebsocketMessageEvent) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

var File_nitric_proto_websockets_v1_websockets_proto protoreflect.FileDescriptor

var file_nitric_proto_websockets_v1_websockets_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x77,
	0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x65, 0x62,
	0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x6e,
	0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x77, 0x65, 0x62, 0x73,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x22, 0x3a, 0x0a, 0x17, 0x57, 0x65, 0x62,
	0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2c, 0x0a, 0x18, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x22, 0x70, 0x0a, 0x14, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x17, 0x0a, 0x15, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x67,
	0x0a, 0x1f, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x22, 0x0a, 0x20, 0x57, 0x65, 0x62, 0x73, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x80, 0x02, 0x0a, 0x0d,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x64, 0x0a,
	0x14, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6e, 0x69,
	0x74, 0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x13,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x6e, 0x0a, 0x18, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x16, 0x77, 0x65, 0x62,
	0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x16,
	0x0a, 0x14, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x4d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xf7,
	0x02, 0x0a, 0x15, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x56, 0x0a,
	0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x34, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5f, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6e,
	0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x77, 0x65, 0x62, 0x73,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x22, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x80, 0x02, 0x0a,
	0x0d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x67,
	0x0a, 0x15, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x77, 0x65, 0x62,
	0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x14, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x17, 0x77, 0x65, 0x62, 0x73, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69,
	0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x15, 0x77,
	0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22,
	0x9a, 0x01, 0x0a, 0x16, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x13, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xec, 0x01, 0x0a,
	0x18, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x68, 0x0a, 0x0c, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x45, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x77,
	0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62,
	0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x1a, 0x66, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3c, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69,
	0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x35, 0x0a, 0x1b, 0x57,
	0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x6a, 0x65,
	0x63, 0x74, 0x22, 0x1d, 0x0a, 0x1b, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x22, 0x2b, 0x0a, 0x15, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x2a, 0x3e,
	0x0a, 0x12, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x10,
	0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x02, 0x32, 0x8a,
	0x03, 0x0a, 0x09, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x72, 0x0a, 0x0b,
	0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x2e, 0x6e, 0x69,
	0x74, 0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e,
	0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x77, 0x65, 0x62,
	0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x73, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x8c, 0x01, 0x0a, 0x0f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x3c, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x7a, 0x0a, 0x0d, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x33, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65,
	0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x7c, 0x0a, 0x10, 0x57,
	0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12,
	0x68, 0x0a, 0x0c, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x29, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x77,
	0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x29, 0x2e, 0x6e, 0x69, 0x74,
	0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0xb6, 0x01, 0x0a, 0x1d, 0x69, 0x6f,
	0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x77, 0x65,
	0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x42, 0x11, 0x57, 0x65, 0x62,
	0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x01,
	0x5a, 0x46, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x69, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x77, 0x65,
	0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x77, 0x65, 0x62, 0x73,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x70, 0x62, 0xaa, 0x02, 0x1a, 0x4e, 0x69, 0x74, 0x72, 0x69,
	0x63, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0xca, 0x02, 0x1a, 0x4e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x5c, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x5c, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x5c,
	0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nitric_proto_websockets_v1_websockets_proto_rawDescOnce sync.Once
	file_nitric_proto_websockets_v1_websockets_proto_rawDescData = file_nitric_proto_websockets_v1_websockets_proto_rawDesc
)

func file_nitric_proto_websockets_v1_websockets_proto_rawDescGZIP() []byte {
	file_nitric_proto_websockets_v1_websockets_proto_rawDescOnce.Do(func() {
		file_nitric_proto_websockets_v1_websockets_proto_rawDescData = protoimpl.X.CompressGZIP(file_nitric_proto_websockets_v1_websockets_proto_rawDescData)
	})
	return file_nitric_proto_websockets_v1_websockets_proto_rawDescData
}

var file_nitric_proto_websockets_v1_websockets_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_nitric_proto_websockets_v1_websockets_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_nitric_proto_websockets_v1_websockets_proto_goTypes = []interface{}{
	(WebsocketEventType)(0),                  // 0: nitric.proto.websockets.v1.WebsocketEventType
	(*WebsocketDetailsRequest)(nil),          // 1: nitric.proto.websockets.v1.WebsocketDetailsRequest
	(*WebsocketDetailsResponse)(nil),         // 2: nitric.proto.websockets.v1.WebsocketDetailsResponse
	(*WebsocketSendRequest)(nil),             // 3: nitric.proto.websockets.v1.WebsocketSendRequest
	(*WebsocketSendResponse)(nil),            // 4: nitric.proto.websockets.v1.WebsocketSendResponse
	(*WebsocketCloseConnectionRequest)(nil),  // 5: nitric.proto.websockets.v1.WebsocketCloseConnectionRequest
	(*WebsocketCloseConnectionResponse)(nil), // 6: nitric.proto.websockets.v1.WebsocketCloseConnectionResponse
	(*ClientMessage)(nil),                    // 7: nitric.proto.websockets.v1.ClientMessage
	(*RegistrationResponse)(nil),             // 8: nitric.proto.websockets.v1.RegistrationResponse
	(*RegistrationRequest)(nil),              // 9: nitric.proto.websockets.v1.RegistrationRequest
	(*WebsocketEventRequest)(nil),            // 10: nitric.proto.websockets.v1.WebsocketEventRequest
	(*QueryValue)(nil),                       // 11: nitric.proto.websockets.v1.QueryValue
	(*ServerMessage)(nil),                    // 12: nitric.proto.websockets.v1.ServerMessage
	(*WebsocketEventResponse)(nil),           // 13: nitric.proto.websockets.v1.WebsocketEventResponse
	(*WebsocketConnectionEvent)(nil),         // 14: nitric.proto.websockets.v1.WebsocketConnectionEvent
	(*WebsocketConnectionResponse)(nil),      // 15: nitric.proto.websockets.v1.WebsocketConnectionResponse
	(*WebsocketDisconnectionEvent)(nil),      // 16: nitric.proto.websockets.v1.WebsocketDisconnectionEvent
	(*WebsocketMessageEvent)(nil),            // 17: nitric.proto.websockets.v1.WebsocketMessageEvent
	nil,                                      // 18: nitric.proto.websockets.v1.WebsocketConnectionEvent.QueryParamsEntry
}
var file_nitric_proto_websockets_v1_websockets_proto_depIdxs = []int32{
	9,  // 0: nitric.proto.websockets.v1.ClientMessage.registration_request:type_name -> nitric.proto.websockets.v1.RegistrationRequest
	13, // 1: nitric.proto.websockets.v1.ClientMessage.websocket_event_response:type_name -> nitric.proto.websockets.v1.WebsocketEventResponse
	0,  // 2: nitric.proto.websockets.v1.RegistrationRequest.event_type:type_name -> nitric.proto.websockets.v1.WebsocketEventType
	14, // 3: nitric.proto.websockets.v1.WebsocketEventRequest.connection:type_name -> nitric.proto.websockets.v1.WebsocketConnectionEvent
	16, // 4: nitric.proto.websockets.v1.WebsocketEventRequest.disconnection:type_name -> nitric.proto.websockets.v1.WebsocketDisconnectionEvent
	17, // 5: nitric.proto.websockets.v1.WebsocketEventRequest.message:type_name -> nitric.proto.websockets.v1.WebsocketMessageEvent
	8,  // 6: nitric.proto.websockets.v1.ServerMessage.registration_response:type_name -> nitric.proto.websockets.v1.RegistrationResponse
	10, // 7: nitric.proto.websockets.v1.ServerMessage.websocket_event_request:type_name -> nitric.proto.websockets.v1.WebsocketEventRequest
	15, // 8: nitric.proto.websockets.v1.WebsocketEventResponse.connection_response:type_name -> nitric.proto.websockets.v1.WebsocketConnectionResponse
	18, // 9: nitric.proto.websockets.v1.WebsocketConnectionEvent.query_params:type_name -> nitric.proto.websockets.v1.WebsocketConnectionEvent.QueryParamsEntry
	11, // 10: nitric.proto.websockets.v1.WebsocketConnectionEvent.QueryParamsEntry.value:type_name -> nitric.proto.websockets.v1.QueryValue
	3,  // 11: nitric.proto.websockets.v1.Websocket.SendMessage:input_type -> nitric.proto.websockets.v1.WebsocketSendRequest
	5,  // 12: nitric.proto.websockets.v1.Websocket.CloseConnection:input_type -> nitric.proto.websockets.v1.WebsocketCloseConnectionRequest
	1,  // 13: nitric.proto.websockets.v1.Websocket.SocketDetails:input_type -> nitric.proto.websockets.v1.WebsocketDetailsRequest
	7,  // 14: nitric.proto.websockets.v1.WebsocketHandler.HandleEvents:input_type -> nitric.proto.websockets.v1.ClientMessage
	4,  // 15: nitric.proto.websockets.v1.Websocket.SendMessage:output_type -> nitric.proto.websockets.v1.WebsocketSendResponse
	6,  // 16: nitric.proto.websockets.v1.Websocket.CloseConnection:output_type -> nitric.proto.websockets.v1.WebsocketCloseConnectionResponse
	2,  // 17: nitric.proto.websockets.v1.Websocket.SocketDetails:output_type -> nitric.proto.websockets.v1.WebsocketDetailsResponse
	12, // 18: nitric.proto.websockets.v1.WebsocketHandler.HandleEvents:output_type -> nitric.proto.websockets.v1.ServerMessage
	15, // [15:19] is the sub-list for method output_type
	11, // [11:15] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_nitric_proto_websockets_v1_websockets_proto_init() }
func file_nitric_proto_websockets_v1_websockets_proto_init() {
	if File_nitric_proto_websockets_v1_websockets_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_nitric_proto_websockets_v1_websockets_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebsocketDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nitric_proto_websockets_v1_websockets_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebsocketDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nitric_proto_websockets_v1_websockets_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebsocketSendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nitric_proto_websockets_v1_websockets_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebsocketSendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nitric_proto_websockets_v1_websockets_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebsocketCloseConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nitric_proto_websockets_v1_websockets_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebsocketCloseConnectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nitric_proto_websockets_v1_websockets_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nitric_proto_websockets_v1_websockets_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistrationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nitric_proto_websockets_v1_websockets_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nitric_proto_websockets_v1_websockets_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebsocketEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nitric_proto_websockets_v1_websockets_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nitric_proto_websockets_v1_websockets_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nitric_proto_websockets_v1_websockets_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebsocketEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nitric_proto_websockets_v1_websockets_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebsocketConnectionEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nitric_proto_websockets_v1_websockets_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebsocketConnectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nitric_proto_websockets_v1_websockets_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebsocketDisconnectionEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nitric_proto_websockets_v1_websockets_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebsocketMessageEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_nitric_proto_websockets_v1_websockets_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*ClientMessage_RegistrationRequest)(nil),
		(*ClientMessage_WebsocketEventResponse)(nil),
	}
	file_nitric_proto_websockets_v1_websockets_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*WebsocketEventRequest_Connection)(nil),
		(*WebsocketEventRequest_Disconnection)(nil),
		(*WebsocketEventRequest_Message)(nil),
	}
	file_nitric_proto_websockets_v1_websockets_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*ServerMessage_RegistrationResponse)(nil),
		(*ServerMessage_WebsocketEventRequest)(nil),
	}
	file_nitric_proto_websockets_v1_websockets_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*WebsocketEventResponse_ConnectionResponse)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nitric_proto_websockets_v1_websockets_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_nitric_proto_websockets_v1_websockets_proto_goTypes,
		DependencyIndexes: file_nitric_proto_websockets_v1_websockets_proto_depIdxs,
		EnumInfos:         file_nitric_proto_websockets_v1_websockets_proto_enumTypes,
		MessageInfos:      file_nitric_proto_websockets_v1_websockets_proto_msgTypes,
	}.Build()
	File_nitric_proto_websockets_v1_websockets_proto = out.File
	file_nitric_proto_websockets_v1_websockets_proto_rawDesc = nil
	file_nitric_proto_websockets_v1_websockets_proto_goTypes = nil
	file_nitric_proto_websockets_v1_websockets_proto_depIdxs = nil
}

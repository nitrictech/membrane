// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.1
// source: proto/deploy/v1/deploy.proto

package v1

import (
	v1 "github.com/nitrictech/nitric/core/pkg/api/nitric/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeployUpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The spec to deploy
	Spec *Spec `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
	// A map of attributes related to the deploy request
	// this allows for adding project identifiers etc.
	Attributes map[string]string `protobuf:"bytes,2,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DeployUpRequest) Reset() {
	*x = DeployUpRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploy_v1_deploy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployUpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployUpRequest) ProtoMessage() {}

func (x *DeployUpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_v1_deploy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployUpRequest.ProtoReflect.Descriptor instead.
func (*DeployUpRequest) Descriptor() ([]byte, []int) {
	return file_proto_deploy_v1_deploy_proto_rawDescGZIP(), []int{0}
}

func (x *DeployUpRequest) GetSpec() *Spec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *DeployUpRequest) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type DeployUpEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Content:
	//
	//	*DeployUpEvent_Message
	//	*DeployUpEvent_Result
	Content isDeployUpEvent_Content `protobuf_oneof:"content"`
}

func (x *DeployUpEvent) Reset() {
	*x = DeployUpEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploy_v1_deploy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployUpEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployUpEvent) ProtoMessage() {}

func (x *DeployUpEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_v1_deploy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployUpEvent.ProtoReflect.Descriptor instead.
func (*DeployUpEvent) Descriptor() ([]byte, []int) {
	return file_proto_deploy_v1_deploy_proto_rawDescGZIP(), []int{1}
}

func (m *DeployUpEvent) GetContent() isDeployUpEvent_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *DeployUpEvent) GetMessage() *DeployEventMessage {
	if x, ok := x.GetContent().(*DeployUpEvent_Message); ok {
		return x.Message
	}
	return nil
}

func (x *DeployUpEvent) GetResult() *DeployUpEventResult {
	if x, ok := x.GetContent().(*DeployUpEvent_Result); ok {
		return x.Result
	}
	return nil
}

type isDeployUpEvent_Content interface {
	isDeployUpEvent_Content()
}

type DeployUpEvent_Message struct {
	Message *DeployEventMessage `protobuf:"bytes,1,opt,name=message,proto3,oneof"`
}

type DeployUpEvent_Result struct {
	Result *DeployUpEventResult `protobuf:"bytes,2,opt,name=result,proto3,oneof"`
}

func (*DeployUpEvent_Message) isDeployUpEvent_Content() {}

func (*DeployUpEvent_Result) isDeployUpEvent_Content() {}

// Messages to provide status updates on the deployment
type DeployEventMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeployEventMessage) Reset() {
	*x = DeployEventMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploy_v1_deploy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployEventMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployEventMessage) ProtoMessage() {}

func (x *DeployEventMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_v1_deploy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployEventMessage.ProtoReflect.Descriptor instead.
func (*DeployEventMessage) Descriptor() ([]byte, []int) {
	return file_proto_deploy_v1_deploy_proto_rawDescGZIP(), []int{2}
}

func (x *DeployEventMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UpResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Content:
	//
	//	*UpResult_StringResult
	Content isUpResult_Content `protobuf_oneof:"content"`
}

func (x *UpResult) Reset() {
	*x = UpResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploy_v1_deploy_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpResult) ProtoMessage() {}

func (x *UpResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_v1_deploy_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpResult.ProtoReflect.Descriptor instead.
func (*UpResult) Descriptor() ([]byte, []int) {
	return file_proto_deploy_v1_deploy_proto_rawDescGZIP(), []int{3}
}

func (m *UpResult) GetContent() isUpResult_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *UpResult) GetStringResult() string {
	if x, ok := x.GetContent().(*UpResult_StringResult); ok {
		return x.StringResult
	}
	return ""
}

type isUpResult_Content interface {
	isUpResult_Content()
}

type UpResult_StringResult struct {
	// Simple formatted string output as result
	StringResult string `protobuf:"bytes,1,opt,name=string_result,json=stringResult,proto3,oneof"`
}

func (*UpResult_StringResult) isUpResult_Content() {}

// Terminal message indicating deployment success
type DeployUpEventResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Indicate the success status
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Output state as a struct, this can be provided as an output file
	// or pretty printed for CLI output
	Result *UpResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeployUpEventResult) Reset() {
	*x = DeployUpEventResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploy_v1_deploy_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployUpEventResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployUpEventResult) ProtoMessage() {}

func (x *DeployUpEventResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_v1_deploy_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployUpEventResult.ProtoReflect.Descriptor instead.
func (*DeployUpEventResult) Descriptor() ([]byte, []int) {
	return file_proto_deploy_v1_deploy_proto_rawDescGZIP(), []int{4}
}

func (x *DeployUpEventResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeployUpEventResult) GetResult() *UpResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type DeployDownRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A map of attributes related to the deploy request
	// this allows for adding project identifiers etc.
	Attributes map[string]string `protobuf:"bytes,1,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DeployDownRequest) Reset() {
	*x = DeployDownRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploy_v1_deploy_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployDownRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployDownRequest) ProtoMessage() {}

func (x *DeployDownRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_v1_deploy_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployDownRequest.ProtoReflect.Descriptor instead.
func (*DeployDownRequest) Descriptor() ([]byte, []int) {
	return file_proto_deploy_v1_deploy_proto_rawDescGZIP(), []int{5}
}

func (x *DeployDownRequest) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type DeployDownEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Content:
	//
	//	*DeployDownEvent_Message
	//	*DeployDownEvent_Result
	Content isDeployDownEvent_Content `protobuf_oneof:"content"`
}

func (x *DeployDownEvent) Reset() {
	*x = DeployDownEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploy_v1_deploy_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployDownEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployDownEvent) ProtoMessage() {}

func (x *DeployDownEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_v1_deploy_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployDownEvent.ProtoReflect.Descriptor instead.
func (*DeployDownEvent) Descriptor() ([]byte, []int) {
	return file_proto_deploy_v1_deploy_proto_rawDescGZIP(), []int{6}
}

func (m *DeployDownEvent) GetContent() isDeployDownEvent_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *DeployDownEvent) GetMessage() *DeployEventMessage {
	if x, ok := x.GetContent().(*DeployDownEvent_Message); ok {
		return x.Message
	}
	return nil
}

func (x *DeployDownEvent) GetResult() *DeployDownEventResult {
	if x, ok := x.GetContent().(*DeployDownEvent_Result); ok {
		return x.Result
	}
	return nil
}

type isDeployDownEvent_Content interface {
	isDeployDownEvent_Content()
}

type DeployDownEvent_Message struct {
	Message *DeployEventMessage `protobuf:"bytes,1,opt,name=message,proto3,oneof"`
}

type DeployDownEvent_Result struct {
	Result *DeployDownEventResult `protobuf:"bytes,2,opt,name=result,proto3,oneof"`
}

func (*DeployDownEvent_Message) isDeployDownEvent_Content() {}

func (*DeployDownEvent_Result) isDeployDownEvent_Content() {}

// Terminal message indicating deployment success
type DeployDownEventResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeployDownEventResult) Reset() {
	*x = DeployDownEventResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploy_v1_deploy_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployDownEventResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployDownEventResult) ProtoMessage() {}

func (x *DeployDownEventResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_v1_deploy_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployDownEventResult.ProtoReflect.Descriptor instead.
func (*DeployDownEventResult) Descriptor() ([]byte, []int) {
	return file_proto_deploy_v1_deploy_proto_rawDescGZIP(), []int{7}
}

// An image source to be used for execution unit deployment
type ImageSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// URI of the docker image
	// TODO: May also need to provide auth information (although this should just be configured on the running client already)
	Uri string `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *ImageSource) Reset() {
	*x = ImageSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploy_v1_deploy_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageSource) ProtoMessage() {}

func (x *ImageSource) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_v1_deploy_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageSource.ProtoReflect.Descriptor instead.
func (*ImageSource) Descriptor() ([]byte, []int) {
	return file_proto_deploy_v1_deploy_proto_rawDescGZIP(), []int{8}
}

func (x *ImageSource) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

// A unit of execution (i.e. function/container)
type ExecutionUnit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Source of the exection unit
	//
	// Types that are assignable to Source:
	//
	//	*ExecutionUnit_Image
	Source isExecutionUnit_Source `protobuf_oneof:"source"`
	// Expected worker count for this execution unit
	Workers int32 `protobuf:"varint,10,opt,name=workers,proto3" json:"workers,omitempty"`
	// Configurable timeout for request handling
	Timeout int32 `protobuf:"varint,11,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// Configurable memory size for this instance
	Memory int32 `protobuf:"varint,12,opt,name=memory,proto3" json:"memory,omitempty"`
}

func (x *ExecutionUnit) Reset() {
	*x = ExecutionUnit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploy_v1_deploy_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionUnit) ProtoMessage() {}

func (x *ExecutionUnit) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_v1_deploy_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionUnit.ProtoReflect.Descriptor instead.
func (*ExecutionUnit) Descriptor() ([]byte, []int) {
	return file_proto_deploy_v1_deploy_proto_rawDescGZIP(), []int{9}
}

func (m *ExecutionUnit) GetSource() isExecutionUnit_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (x *ExecutionUnit) GetImage() *ImageSource {
	if x, ok := x.GetSource().(*ExecutionUnit_Image); ok {
		return x.Image
	}
	return nil
}

func (x *ExecutionUnit) GetWorkers() int32 {
	if x != nil {
		return x.Workers
	}
	return 0
}

func (x *ExecutionUnit) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *ExecutionUnit) GetMemory() int32 {
	if x != nil {
		return x.Memory
	}
	return 0
}

type isExecutionUnit_Source interface {
	isExecutionUnit_Source()
}

type ExecutionUnit_Image struct {
	// Container image as a execution unit
	Image *ImageSource `protobuf:"bytes,1,opt,name=image,proto3,oneof"`
}

func (*ExecutionUnit_Image) isExecutionUnit_Source() {}

type Bucket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Bucket) Reset() {
	*x = Bucket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploy_v1_deploy_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bucket) ProtoMessage() {}

func (x *Bucket) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_v1_deploy_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bucket.ProtoReflect.Descriptor instead.
func (*Bucket) Descriptor() ([]byte, []int) {
	return file_proto_deploy_v1_deploy_proto_rawDescGZIP(), []int{10}
}

type Topic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TODO: Include topic specifications here
	Subscriptions []*SubscriptionTarget `protobuf:"bytes,1,rep,name=subscriptions,proto3" json:"subscriptions,omitempty"`
}

func (x *Topic) Reset() {
	*x = Topic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploy_v1_deploy_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Topic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Topic) ProtoMessage() {}

func (x *Topic) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_v1_deploy_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Topic.ProtoReflect.Descriptor instead.
func (*Topic) Descriptor() ([]byte, []int) {
	return file_proto_deploy_v1_deploy_proto_rawDescGZIP(), []int{11}
}

func (x *Topic) GetSubscriptions() []*SubscriptionTarget {
	if x != nil {
		return x.Subscriptions
	}
	return nil
}

type Queue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Queue) Reset() {
	*x = Queue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploy_v1_deploy_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Queue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Queue) ProtoMessage() {}

func (x *Queue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_v1_deploy_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Queue.ProtoReflect.Descriptor instead.
func (*Queue) Descriptor() ([]byte, []int) {
	return file_proto_deploy_v1_deploy_proto_rawDescGZIP(), []int{12}
}

type Collection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Collection) Reset() {
	*x = Collection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploy_v1_deploy_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Collection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Collection) ProtoMessage() {}

func (x *Collection) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_v1_deploy_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Collection.ProtoReflect.Descriptor instead.
func (*Collection) Descriptor() ([]byte, []int) {
	return file_proto_deploy_v1_deploy_proto_rawDescGZIP(), []int{13}
}

type Secret struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Secret) Reset() {
	*x = Secret{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploy_v1_deploy_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Secret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Secret) ProtoMessage() {}

func (x *Secret) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_v1_deploy_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Secret.ProtoReflect.Descriptor instead.
func (*Secret) Descriptor() ([]byte, []int) {
	return file_proto_deploy_v1_deploy_proto_rawDescGZIP(), []int{14}
}

type SubscriptionTarget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TODO: Include subscription specifications here
	//
	// Types that are assignable to Target:
	//
	//	*SubscriptionTarget_ExecutionUnit
	Target isSubscriptionTarget_Target `protobuf_oneof:"target"`
}

func (x *SubscriptionTarget) Reset() {
	*x = SubscriptionTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploy_v1_deploy_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionTarget) ProtoMessage() {}

func (x *SubscriptionTarget) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_v1_deploy_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionTarget.ProtoReflect.Descriptor instead.
func (*SubscriptionTarget) Descriptor() ([]byte, []int) {
	return file_proto_deploy_v1_deploy_proto_rawDescGZIP(), []int{15}
}

func (m *SubscriptionTarget) GetTarget() isSubscriptionTarget_Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (x *SubscriptionTarget) GetExecutionUnit() string {
	if x, ok := x.GetTarget().(*SubscriptionTarget_ExecutionUnit); ok {
		return x.ExecutionUnit
	}
	return ""
}

type isSubscriptionTarget_Target interface {
	isSubscriptionTarget_Target()
}

type SubscriptionTarget_ExecutionUnit struct {
	// The name of an execution unit to target
	ExecutionUnit string `protobuf:"bytes,1,opt,name=execution_unit,json=executionUnit,proto3,oneof"`
}

func (*SubscriptionTarget_ExecutionUnit) isSubscriptionTarget_Target() {}

type TopicSubscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target *SubscriptionTarget `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *TopicSubscription) Reset() {
	*x = TopicSubscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploy_v1_deploy_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicSubscription) ProtoMessage() {}

func (x *TopicSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_v1_deploy_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicSubscription.ProtoReflect.Descriptor instead.
func (*TopicSubscription) Descriptor() ([]byte, []int) {
	return file_proto_deploy_v1_deploy_proto_rawDescGZIP(), []int{16}
}

func (x *TopicSubscription) GetTarget() *SubscriptionTarget {
	if x != nil {
		return x.Target
	}
	return nil
}

type Api struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TODO: Include API specifications here
	//
	// Types that are assignable to Document:
	//
	//	*Api_Openapi
	Document isApi_Document `protobuf_oneof:"document"`
}

func (x *Api) Reset() {
	*x = Api{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploy_v1_deploy_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Api) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Api) ProtoMessage() {}

func (x *Api) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_v1_deploy_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Api.ProtoReflect.Descriptor instead.
func (*Api) Descriptor() ([]byte, []int) {
	return file_proto_deploy_v1_deploy_proto_rawDescGZIP(), []int{17}
}

func (m *Api) GetDocument() isApi_Document {
	if m != nil {
		return m.Document
	}
	return nil
}

func (x *Api) GetOpenapi() string {
	if x, ok := x.GetDocument().(*Api_Openapi); ok {
		return x.Openapi
	}
	return ""
}

type isApi_Document interface {
	isApi_Document()
}

type Api_Openapi struct {
	// An OpenAPI document for deployment
	// This document will contain extensions that hint of execution units that should be targeted as part of the deployment
	Openapi string `protobuf:"bytes,1,opt,name=openapi,proto3,oneof"`
}

func (*Api_Openapi) isApi_Document() {}

type ScheduleTarget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Target:
	//
	//	*ScheduleTarget_ExecutionUnit
	Target isScheduleTarget_Target `protobuf_oneof:"target"`
}

func (x *ScheduleTarget) Reset() {
	*x = ScheduleTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploy_v1_deploy_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleTarget) ProtoMessage() {}

func (x *ScheduleTarget) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_v1_deploy_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleTarget.ProtoReflect.Descriptor instead.
func (*ScheduleTarget) Descriptor() ([]byte, []int) {
	return file_proto_deploy_v1_deploy_proto_rawDescGZIP(), []int{18}
}

func (m *ScheduleTarget) GetTarget() isScheduleTarget_Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (x *ScheduleTarget) GetExecutionUnit() string {
	if x, ok := x.GetTarget().(*ScheduleTarget_ExecutionUnit); ok {
		return x.ExecutionUnit
	}
	return ""
}

type isScheduleTarget_Target interface {
	isScheduleTarget_Target()
}

type ScheduleTarget_ExecutionUnit struct {
	// The name of an execution unit to target
	ExecutionUnit string `protobuf:"bytes,1,opt,name=execution_unit,json=executionUnit,proto3,oneof"`
}

func (*ScheduleTarget_ExecutionUnit) isScheduleTarget_Target() {}

type Schedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cron   string          `protobuf:"bytes,1,opt,name=cron,proto3" json:"cron,omitempty"`
	Target *ScheduleTarget `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *Schedule) Reset() {
	*x = Schedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploy_v1_deploy_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Schedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schedule) ProtoMessage() {}

func (x *Schedule) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_v1_deploy_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schedule.ProtoReflect.Descriptor instead.
func (*Schedule) Descriptor() ([]byte, []int) {
	return file_proto_deploy_v1_deploy_proto_rawDescGZIP(), []int{19}
}

func (x *Schedule) GetCron() string {
	if x != nil {
		return x.Cron
	}
	return ""
}

func (x *Schedule) GetTarget() *ScheduleTarget {
	if x != nil {
		return x.Target
	}
	return nil
}

type Resource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type v1.ResourceType `protobuf:"varint,2,opt,name=type,proto3,enum=nitric.resource.v1.ResourceType" json:"type,omitempty"`
	// Types that are assignable to Config:
	//
	//	*Resource_ExecutionUnit
	//	*Resource_Bucket
	//	*Resource_Topic
	//	*Resource_Queue
	//	*Resource_Api
	//	*Resource_Policy
	//	*Resource_Schedule
	//	*Resource_Collection
	//	*Resource_Secret
	Config isResource_Config `protobuf_oneof:"config"`
}

func (x *Resource) Reset() {
	*x = Resource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploy_v1_deploy_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_v1_deploy_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_proto_deploy_v1_deploy_proto_rawDescGZIP(), []int{20}
}

func (x *Resource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Resource) GetType() v1.ResourceType {
	if x != nil {
		return x.Type
	}
	return v1.ResourceType(0)
}

func (m *Resource) GetConfig() isResource_Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (x *Resource) GetExecutionUnit() *ExecutionUnit {
	if x, ok := x.GetConfig().(*Resource_ExecutionUnit); ok {
		return x.ExecutionUnit
	}
	return nil
}

func (x *Resource) GetBucket() *Bucket {
	if x, ok := x.GetConfig().(*Resource_Bucket); ok {
		return x.Bucket
	}
	return nil
}

func (x *Resource) GetTopic() *Topic {
	if x, ok := x.GetConfig().(*Resource_Topic); ok {
		return x.Topic
	}
	return nil
}

func (x *Resource) GetQueue() *Queue {
	if x, ok := x.GetConfig().(*Resource_Queue); ok {
		return x.Queue
	}
	return nil
}

func (x *Resource) GetApi() *Api {
	if x, ok := x.GetConfig().(*Resource_Api); ok {
		return x.Api
	}
	return nil
}

func (x *Resource) GetPolicy() *Policy {
	if x, ok := x.GetConfig().(*Resource_Policy); ok {
		return x.Policy
	}
	return nil
}

func (x *Resource) GetSchedule() *Schedule {
	if x, ok := x.GetConfig().(*Resource_Schedule); ok {
		return x.Schedule
	}
	return nil
}

func (x *Resource) GetCollection() *Collection {
	if x, ok := x.GetConfig().(*Resource_Collection); ok {
		return x.Collection
	}
	return nil
}

func (x *Resource) GetSecret() *Secret {
	if x, ok := x.GetConfig().(*Resource_Secret); ok {
		return x.Secret
	}
	return nil
}

type isResource_Config interface {
	isResource_Config()
}

type Resource_ExecutionUnit struct {
	ExecutionUnit *ExecutionUnit `protobuf:"bytes,10,opt,name=execution_unit,json=executionUnit,proto3,oneof"`
}

type Resource_Bucket struct {
	Bucket *Bucket `protobuf:"bytes,11,opt,name=bucket,proto3,oneof"`
}

type Resource_Topic struct {
	Topic *Topic `protobuf:"bytes,12,opt,name=topic,proto3,oneof"`
}

type Resource_Queue struct {
	Queue *Queue `protobuf:"bytes,13,opt,name=queue,proto3,oneof"`
}

type Resource_Api struct {
	Api *Api `protobuf:"bytes,14,opt,name=api,proto3,oneof"`
}

type Resource_Policy struct {
	Policy *Policy `protobuf:"bytes,15,opt,name=policy,proto3,oneof"`
}

type Resource_Schedule struct {
	Schedule *Schedule `protobuf:"bytes,16,opt,name=schedule,proto3,oneof"`
}

type Resource_Collection struct {
	Collection *Collection `protobuf:"bytes,17,opt,name=collection,proto3,oneof"`
}

type Resource_Secret struct {
	Secret *Secret `protobuf:"bytes,18,opt,name=secret,proto3,oneof"`
}

func (*Resource_ExecutionUnit) isResource_Config() {}

func (*Resource_Bucket) isResource_Config() {}

func (*Resource_Topic) isResource_Config() {}

func (*Resource_Queue) isResource_Config() {}

func (*Resource_Api) isResource_Config() {}

func (*Resource_Policy) isResource_Config() {}

func (*Resource_Schedule) isResource_Config() {}

func (*Resource_Collection) isResource_Config() {}

func (*Resource_Secret) isResource_Config() {}

// TODO: This is already defined in our resource contracts...
// Need to determine if it's worth re-using
// unfortunately there are parts we don't want to duplicate, such as API config
type Policy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Principals []*Resource `protobuf:"bytes,1,rep,name=principals,proto3" json:"principals,omitempty"`
	// TODO: Split out discrete action definitions from resources
	// Also need to allow custom action types as well
	// Should incorporate action re-use here...
	Actions   []v1.Action `protobuf:"varint,2,rep,packed,name=actions,proto3,enum=nitric.resource.v1.Action" json:"actions,omitempty"`
	Resources []*Resource `protobuf:"bytes,3,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *Policy) Reset() {
	*x = Policy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploy_v1_deploy_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Policy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Policy) ProtoMessage() {}

func (x *Policy) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_v1_deploy_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Policy.ProtoReflect.Descriptor instead.
func (*Policy) Descriptor() ([]byte, []int) {
	return file_proto_deploy_v1_deploy_proto_rawDescGZIP(), []int{21}
}

func (x *Policy) GetPrincipals() []*Resource {
	if x != nil {
		return x.Principals
	}
	return nil
}

func (x *Policy) GetActions() []v1.Action {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *Policy) GetResources() []*Resource {
	if x != nil {
		return x.Resources
	}
	return nil
}

type Spec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// list of resources to deploy
	Resources []*Resource `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *Spec) Reset() {
	*x = Spec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploy_v1_deploy_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Spec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Spec) ProtoMessage() {}

func (x *Spec) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_v1_deploy_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Spec.ProtoReflect.Descriptor instead.
func (*Spec) Descriptor() ([]byte, []int) {
	return file_proto_deploy_v1_deploy_proto_rawDescGZIP(), []int{22}
}

func (x *Spec) GetResources() []*Resource {
	if x != nil {
		return x.Resources
	}
	return nil
}

var File_proto_deploy_v1_deploy_proto protoreflect.FileDescriptor

var file_proto_deploy_v1_deploy_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2f, 0x76,
	0x31, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10,
	0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x76, 0x31,
	0x1a, 0x20, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xcf, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x55, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70,
	0x65, 0x63, 0x12, 0x51, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x55, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x9d, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x55,
	0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63,
	0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69,
	0x63, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x55, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48,
	0x00, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x22, 0x2e, 0x0a, 0x12, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x3c, 0x0a, 0x08, 0x55, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x25, 0x0a, 0x0d, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x22, 0x63, 0x0a, 0x13, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x55, 0x70, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x32, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xa7, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x44, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a,
	0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x33, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x44, 0x6f, 0x77, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xa1, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x44, 0x6f, 0x77, 0x6e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63,
	0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x44, 0x6f, 0x77, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x44,
	0x6f, 0x77, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x1f,
	0x0a, 0x0b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22,
	0x9c, 0x01, 0x0a, 0x0d, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69,
	0x74, 0x12, 0x35, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48,
	0x00, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x77, 0x6f, 0x72, 0x6b, 0x65,
	0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x08,
	0x0a, 0x06, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x53, 0x0a, 0x05, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x12, 0x4a, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69,
	0x63, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x0d,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x07, 0x0a,
	0x05, 0x51, 0x75, 0x65, 0x75, 0x65, 0x22, 0x0c, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x08, 0x0a, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x47,
	0x0a, 0x12, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x12, 0x27, 0x0a, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x42, 0x08, 0x0a,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x51, 0x0a, 0x11, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x06,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6e,
	0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x2d, 0x0a, 0x03, 0x41, 0x70,
	0x69, 0x12, 0x1a, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x42, 0x0a, 0x0a,
	0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x43, 0x0a, 0x0e, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x27, 0x0a, 0x0e, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x6e, 0x69, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x58,
	0x0a, 0x08, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x72,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x72, 0x6f, 0x6e, 0x12, 0x38,
	0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0xcb, 0x04, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x48, 0x0a, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x69,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63,
	0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x69, 0x74, 0x72,
	0x69, 0x63, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x48, 0x00, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x2f, 0x0a,
	0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6e,
	0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x48, 0x00, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x2f,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x48, 0x00, 0x52, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x12,
	0x29, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6e,
	0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x70, 0x69, 0x48, 0x00, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x32, 0x0a, 0x06, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x69, 0x74,
	0x72, 0x69, 0x63, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x48, 0x00, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x38,
	0x0a, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x08,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x3e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6e,
	0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69,
	0x63, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x48, 0x00, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x42, 0x08, 0x0a, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xb4, 0x01, 0x0a, 0x06, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x73, 0x12, 0x34, 0x0a,
	0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1a,
	0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x40, 0x0a,
	0x04, 0x53, 0x70, 0x65, 0x63, 0x12, 0x38, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69,
	0x63, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x32,
	0xad, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x4a, 0x0a, 0x02, 0x55, 0x70, 0x12, 0x21, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63,
	0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x55, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6e, 0x69, 0x74,
	0x72, 0x69, 0x63, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x55, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x30, 0x01, 0x12, 0x50, 0x0a,
	0x04, 0x44, 0x6f, 0x77, 0x6e, 0x12, 0x23, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x44,
	0x6f, 0x77, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6e, 0x69, 0x74,
	0x72, 0x69, 0x63, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x44, 0x6f, 0x77, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x30, 0x01, 0x42,
	0x94, 0x01, 0x0a, 0x19, 0x69, 0x6f, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x76, 0x31, 0x42, 0x07, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x73, 0x50, 0x01, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x63, 0x68, 0x2f,
	0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x6e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x2f, 0x76, 0x31, 0xaa, 0x02, 0x16, 0x4e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x76, 0x31, 0xca, 0x02, 0x16,
	0x4e, 0x69, 0x74, 0x72, 0x69, 0x63, 0x5c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5c, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x5c, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_deploy_v1_deploy_proto_rawDescOnce sync.Once
	file_proto_deploy_v1_deploy_proto_rawDescData = file_proto_deploy_v1_deploy_proto_rawDesc
)

func file_proto_deploy_v1_deploy_proto_rawDescGZIP() []byte {
	file_proto_deploy_v1_deploy_proto_rawDescOnce.Do(func() {
		file_proto_deploy_v1_deploy_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_deploy_v1_deploy_proto_rawDescData)
	})
	return file_proto_deploy_v1_deploy_proto_rawDescData
}

var file_proto_deploy_v1_deploy_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_proto_deploy_v1_deploy_proto_goTypes = []interface{}{
	(*DeployUpRequest)(nil),       // 0: nitric.deploy.v1.DeployUpRequest
	(*DeployUpEvent)(nil),         // 1: nitric.deploy.v1.DeployUpEvent
	(*DeployEventMessage)(nil),    // 2: nitric.deploy.v1.DeployEventMessage
	(*UpResult)(nil),              // 3: nitric.deploy.v1.UpResult
	(*DeployUpEventResult)(nil),   // 4: nitric.deploy.v1.DeployUpEventResult
	(*DeployDownRequest)(nil),     // 5: nitric.deploy.v1.DeployDownRequest
	(*DeployDownEvent)(nil),       // 6: nitric.deploy.v1.DeployDownEvent
	(*DeployDownEventResult)(nil), // 7: nitric.deploy.v1.DeployDownEventResult
	(*ImageSource)(nil),           // 8: nitric.deploy.v1.ImageSource
	(*ExecutionUnit)(nil),         // 9: nitric.deploy.v1.ExecutionUnit
	(*Bucket)(nil),                // 10: nitric.deploy.v1.Bucket
	(*Topic)(nil),                 // 11: nitric.deploy.v1.Topic
	(*Queue)(nil),                 // 12: nitric.deploy.v1.Queue
	(*Collection)(nil),            // 13: nitric.deploy.v1.Collection
	(*Secret)(nil),                // 14: nitric.deploy.v1.Secret
	(*SubscriptionTarget)(nil),    // 15: nitric.deploy.v1.SubscriptionTarget
	(*TopicSubscription)(nil),     // 16: nitric.deploy.v1.TopicSubscription
	(*Api)(nil),                   // 17: nitric.deploy.v1.Api
	(*ScheduleTarget)(nil),        // 18: nitric.deploy.v1.ScheduleTarget
	(*Schedule)(nil),              // 19: nitric.deploy.v1.Schedule
	(*Resource)(nil),              // 20: nitric.deploy.v1.Resource
	(*Policy)(nil),                // 21: nitric.deploy.v1.Policy
	(*Spec)(nil),                  // 22: nitric.deploy.v1.Spec
	nil,                           // 23: nitric.deploy.v1.DeployUpRequest.AttributesEntry
	nil,                           // 24: nitric.deploy.v1.DeployDownRequest.AttributesEntry
	(v1.ResourceType)(0),          // 25: nitric.resource.v1.ResourceType
	(v1.Action)(0),                // 26: nitric.resource.v1.Action
}
var file_proto_deploy_v1_deploy_proto_depIdxs = []int32{
	22, // 0: nitric.deploy.v1.DeployUpRequest.spec:type_name -> nitric.deploy.v1.Spec
	23, // 1: nitric.deploy.v1.DeployUpRequest.attributes:type_name -> nitric.deploy.v1.DeployUpRequest.AttributesEntry
	2,  // 2: nitric.deploy.v1.DeployUpEvent.message:type_name -> nitric.deploy.v1.DeployEventMessage
	4,  // 3: nitric.deploy.v1.DeployUpEvent.result:type_name -> nitric.deploy.v1.DeployUpEventResult
	3,  // 4: nitric.deploy.v1.DeployUpEventResult.result:type_name -> nitric.deploy.v1.UpResult
	24, // 5: nitric.deploy.v1.DeployDownRequest.attributes:type_name -> nitric.deploy.v1.DeployDownRequest.AttributesEntry
	2,  // 6: nitric.deploy.v1.DeployDownEvent.message:type_name -> nitric.deploy.v1.DeployEventMessage
	7,  // 7: nitric.deploy.v1.DeployDownEvent.result:type_name -> nitric.deploy.v1.DeployDownEventResult
	8,  // 8: nitric.deploy.v1.ExecutionUnit.image:type_name -> nitric.deploy.v1.ImageSource
	15, // 9: nitric.deploy.v1.Topic.subscriptions:type_name -> nitric.deploy.v1.SubscriptionTarget
	15, // 10: nitric.deploy.v1.TopicSubscription.target:type_name -> nitric.deploy.v1.SubscriptionTarget
	18, // 11: nitric.deploy.v1.Schedule.target:type_name -> nitric.deploy.v1.ScheduleTarget
	25, // 12: nitric.deploy.v1.Resource.type:type_name -> nitric.resource.v1.ResourceType
	9,  // 13: nitric.deploy.v1.Resource.execution_unit:type_name -> nitric.deploy.v1.ExecutionUnit
	10, // 14: nitric.deploy.v1.Resource.bucket:type_name -> nitric.deploy.v1.Bucket
	11, // 15: nitric.deploy.v1.Resource.topic:type_name -> nitric.deploy.v1.Topic
	12, // 16: nitric.deploy.v1.Resource.queue:type_name -> nitric.deploy.v1.Queue
	17, // 17: nitric.deploy.v1.Resource.api:type_name -> nitric.deploy.v1.Api
	21, // 18: nitric.deploy.v1.Resource.policy:type_name -> nitric.deploy.v1.Policy
	19, // 19: nitric.deploy.v1.Resource.schedule:type_name -> nitric.deploy.v1.Schedule
	13, // 20: nitric.deploy.v1.Resource.collection:type_name -> nitric.deploy.v1.Collection
	14, // 21: nitric.deploy.v1.Resource.secret:type_name -> nitric.deploy.v1.Secret
	20, // 22: nitric.deploy.v1.Policy.principals:type_name -> nitric.deploy.v1.Resource
	26, // 23: nitric.deploy.v1.Policy.actions:type_name -> nitric.resource.v1.Action
	20, // 24: nitric.deploy.v1.Policy.resources:type_name -> nitric.deploy.v1.Resource
	20, // 25: nitric.deploy.v1.Spec.resources:type_name -> nitric.deploy.v1.Resource
	0,  // 26: nitric.deploy.v1.DeployService.Up:input_type -> nitric.deploy.v1.DeployUpRequest
	5,  // 27: nitric.deploy.v1.DeployService.Down:input_type -> nitric.deploy.v1.DeployDownRequest
	1,  // 28: nitric.deploy.v1.DeployService.Up:output_type -> nitric.deploy.v1.DeployUpEvent
	6,  // 29: nitric.deploy.v1.DeployService.Down:output_type -> nitric.deploy.v1.DeployDownEvent
	28, // [28:30] is the sub-list for method output_type
	26, // [26:28] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_proto_deploy_v1_deploy_proto_init() }
func file_proto_deploy_v1_deploy_proto_init() {
	if File_proto_deploy_v1_deploy_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_deploy_v1_deploy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployUpRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploy_v1_deploy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployUpEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploy_v1_deploy_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployEventMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploy_v1_deploy_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploy_v1_deploy_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployUpEventResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploy_v1_deploy_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployDownRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploy_v1_deploy_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployDownEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploy_v1_deploy_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployDownEventResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploy_v1_deploy_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploy_v1_deploy_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionUnit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploy_v1_deploy_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bucket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploy_v1_deploy_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Topic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploy_v1_deploy_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Queue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploy_v1_deploy_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Collection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploy_v1_deploy_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Secret); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploy_v1_deploy_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriptionTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploy_v1_deploy_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicSubscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploy_v1_deploy_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Api); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploy_v1_deploy_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploy_v1_deploy_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Schedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploy_v1_deploy_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploy_v1_deploy_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Policy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploy_v1_deploy_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Spec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_deploy_v1_deploy_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*DeployUpEvent_Message)(nil),
		(*DeployUpEvent_Result)(nil),
	}
	file_proto_deploy_v1_deploy_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*UpResult_StringResult)(nil),
	}
	file_proto_deploy_v1_deploy_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*DeployDownEvent_Message)(nil),
		(*DeployDownEvent_Result)(nil),
	}
	file_proto_deploy_v1_deploy_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*ExecutionUnit_Image)(nil),
	}
	file_proto_deploy_v1_deploy_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*SubscriptionTarget_ExecutionUnit)(nil),
	}
	file_proto_deploy_v1_deploy_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*Api_Openapi)(nil),
	}
	file_proto_deploy_v1_deploy_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*ScheduleTarget_ExecutionUnit)(nil),
	}
	file_proto_deploy_v1_deploy_proto_msgTypes[20].OneofWrappers = []interface{}{
		(*Resource_ExecutionUnit)(nil),
		(*Resource_Bucket)(nil),
		(*Resource_Topic)(nil),
		(*Resource_Queue)(nil),
		(*Resource_Api)(nil),
		(*Resource_Policy)(nil),
		(*Resource_Schedule)(nil),
		(*Resource_Collection)(nil),
		(*Resource_Secret)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_deploy_v1_deploy_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_deploy_v1_deploy_proto_goTypes,
		DependencyIndexes: file_proto_deploy_v1_deploy_proto_depIdxs,
		MessageInfos:      file_proto_deploy_v1_deploy_proto_msgTypes,
	}.Build()
	File_proto_deploy_v1_deploy_proto = out.File
	file_proto_deploy_v1_deploy_proto_rawDesc = nil
	file_proto_deploy_v1_deploy_proto_goTypes = nil
	file_proto_deploy_v1_deploy_proto_depIdxs = nil
}
